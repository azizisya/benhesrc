%!PS-Adobe-2.0
%%Title: log_e.ps
%%Creator: gnuplot 3.7 patchlevel 3
%%CreationDate: Mon Mar 15 15:29:08 2004
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
406 280 M
63 0 V
6493 0 R
-63 0 V
 stroke
322 280 M
[ [(Helvetica) 140.0 0.0 true true ( 0)]
] -46.7 MRshow
406 1045 M
63 0 V
6493 0 R
-63 0 V
 stroke
322 1045 M
[ [(Helvetica) 140.0 0.0 true true ( 1)]
] -46.7 MRshow
406 1811 M
63 0 V
6493 0 R
-63 0 V
 stroke
322 1811 M
[ [(Helvetica) 140.0 0.0 true true ( 2)]
] -46.7 MRshow
406 2576 M
63 0 V
6493 0 R
-63 0 V
 stroke
322 2576 M
[ [(Helvetica) 140.0 0.0 true true ( 3)]
] -46.7 MRshow
406 3341 M
63 0 V
6493 0 R
-63 0 V
 stroke
322 3341 M
[ [(Helvetica) 140.0 0.0 true true ( 4)]
] -46.7 MRshow
406 4107 M
63 0 V
6493 0 R
-63 0 V
 stroke
322 4107 M
[ [(Helvetica) 140.0 0.0 true true ( 5)]
] -46.7 MRshow
406 4872 M
63 0 V
6493 0 R
-63 0 V
 stroke
322 4872 M
[ [(Helvetica) 140.0 0.0 true true ( 6)]
] -46.7 MRshow
406 280 M
0 63 V
0 4529 R
0 -63 V
 stroke
406 140 M
[ [(Helvetica) 140.0 0.0 true true ( 0)]
] -46.7 MCshow
1499 280 M
0 63 V
0 4529 R
0 -63 V
 stroke
1499 140 M
[ [(Helvetica) 140.0 0.0 true true ( 2)]
] -46.7 MCshow
2591 280 M
0 63 V
0 4529 R
0 -63 V
 stroke
2591 140 M
[ [(Helvetica) 140.0 0.0 true true ( 4)]
] -46.7 MCshow
3684 280 M
0 63 V
0 4529 R
0 -63 V
 stroke
3684 140 M
[ [(Helvetica) 140.0 0.0 true true ( 6)]
] -46.7 MCshow
4777 280 M
0 63 V
0 4529 R
0 -63 V
 stroke
4777 140 M
[ [(Helvetica) 140.0 0.0 true true ( 8)]
] -46.7 MCshow
5869 280 M
0 63 V
0 4529 R
0 -63 V
 stroke
5869 140 M
[ [(Helvetica) 140.0 0.0 true true ( 10)]
] -46.7 MCshow
6962 280 M
0 63 V
0 4529 R
0 -63 V
 stroke
6962 140 M
[ [(Helvetica) 140.0 0.0 true true ( 12)]
] -46.7 MCshow
1.000 UL
LTb
406 280 M
6556 0 V
0 4592 V
-6556 0 V
406 280 L
1.000 UP
1.000 UL
LT0
6311 4739 M
[ [(Helvetica) 140.0 0.0 true true ("all)]
[(Helvetica) 112.0 -42.0 true true (l)]
[(Helvetica) 140.0 0.0 true true (oge.txt")]
] -32.7 MRshow
406 4267 Pls
783 3158 Pls
1007 2683 Pls
1165 2530 Pls
1286 2300 Pls
1384 2040 Pls
1471 1772 Pls
1542 2300 Pls
1608 1650 Pls
1663 1964 Pls
1717 1512 Pls
1761 280 Pls
1805 2178 Pls
1848 1772 Pls
1887 1344 Pls
1919 1512 Pls
1952 280 Pls
1985 1512 Pls
2012 1122 Pls
2045 280 Pls
2067 1122 Pls
2094 808 Pls
2094 1122 Pls
2143 808 Pls
2165 1512 Pls
2187 1344 Pls
2225 280 Pls
2247 1344 Pls
2264 808 Pls
2302 1512 Pls
2318 808 Pls
2335 808 Pls
2351 280 Pls
2362 1122 Pls
2378 1122 Pls
2395 808 Pls
2406 1122 Pls
2422 280 Pls
2433 1122 Pls
2460 280 Pls
2498 808 Pls
2509 280 Pls
2520 280 Pls
2531 280 Pls
2553 808 Pls
2564 808 Pls
2575 808 Pls
2586 280 Pls
2597 808 Pls
2608 808 Pls
2613 280 Pls
2624 1122 Pls
2641 280 Pls
2662 1122 Pls
2668 280 Pls
2679 280 Pls
2684 808 Pls
2695 280 Pls
2701 808 Pls
2712 280 Pls
2750 808 Pls
2755 280 Pls
2788 280 Pls
2793 280 Pls
2804 280 Pls
2821 280 Pls
2826 280 Pls
2837 280 Pls
2848 280 Pls
2854 280 Pls
2859 280 Pls
2875 280 Pls
2881 280 Pls
2892 280 Pls
2903 280 Pls
2908 280 Pls
2919 280 Pls
2952 808 Pls
2974 808 Pls
2979 280 Pls
2985 808 Pls
2990 280 Pls
3001 280 Pls
3007 280 Pls
3017 280 Pls
3023 280 Pls
3034 808 Pls
3045 808 Pls
3050 280 Pls
3056 280 Pls
3067 808 Pls
3072 280 Pls
3099 280 Pls
3099 808 Pls
3121 280 Pls
3127 280 Pls
3132 280 Pls
3149 280 Pls
3160 280 Pls
3165 280 Pls
3170 280 Pls
3203 280 Pls
3214 280 Pls
3214 280 Pls
3220 280 Pls
3236 280 Pls
3258 280 Pls
3274 280 Pls
3280 280 Pls
3318 280 Pls
3318 280 Pls
3351 280 Pls
3384 280 Pls
3394 280 Pls
3400 1122 Pls
3411 280 Pls
3427 280 Pls
3438 280 Pls
3438 280 Pls
3460 280 Pls
3460 808 Pls
3476 280 Pls
3493 280 Pls
3531 280 Pls
3531 280 Pls
3542 280 Pls
3542 280 Pls
3553 280 Pls
3558 280 Pls
3564 280 Pls
3591 280 Pls
3689 280 Pls
3711 280 Pls
3711 280 Pls
3722 280 Pls
3728 280 Pls
3739 280 Pls
3744 280 Pls
3750 280 Pls
3766 280 Pls
3771 280 Pls
3771 280 Pls
3793 280 Pls
3799 280 Pls
3815 280 Pls
3821 280 Pls
3826 280 Pls
3826 280 Pls
3848 280 Pls
3853 280 Pls
3859 280 Pls
3859 280 Pls
3870 280 Pls
3870 280 Pls
3875 280 Pls
3881 280 Pls
3913 280 Pls
3935 280 Pls
3946 280 Pls
3952 280 Pls
3957 280 Pls
3990 280 Pls
4001 280 Pls
4006 280 Pls
4023 280 Pls
4023 280 Pls
4028 280 Pls
4039 280 Pls
4061 280 Pls
4088 280 Pls
4088 280 Pls
4088 280 Pls
4132 280 Pls
4132 280 Pls
4159 280 Pls
4192 280 Pls
4198 280 Pls
4214 280 Pls
4219 280 Pls
4236 280 Pls
4247 280 Pls
4247 280 Pls
4258 280 Pls
4269 280 Pls
4269 280 Pls
4274 280 Pls
4290 280 Pls
4296 280 Pls
4312 280 Pls
4318 280 Pls
4323 280 Pls
4323 280 Pls
4329 280 Pls
4345 280 Pls
4378 280 Pls
4383 280 Pls
4405 280 Pls
4405 280 Pls
4432 280 Pls
4504 280 Pls
4514 280 Pls
4531 280 Pls
4553 280 Pls
4564 280 Pls
4580 280 Pls
4580 280 Pls
4596 280 Pls
4596 280 Pls
4624 280 Pls
4624 280 Pls
4635 280 Pls
4667 280 Pls
4678 280 Pls
4684 280 Pls
4700 280 Pls
4782 280 Pls
4826 280 Pls
4880 280 Pls
4891 280 Pls
4902 280 Pls
4913 280 Pls
4930 280 Pls
4930 280 Pls
4941 280 Pls
4957 280 Pls
5012 280 Pls
5094 280 Pls
5137 280 Pls
5192 280 Pls
5192 280 Pls
5230 280 Pls
5241 280 Pls
5334 280 Pls
5438 280 Pls
5476 280 Pls
5492 280 Pls
5585 280 Pls
5591 280 Pls
5602 280 Pls
6208 280 Pls
6235 280 Pls
6470 280 Pls
6601 280 Pls
6594 4739 Pls
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
